{"version":3,"sources":["components/Subject/style.module.scss","../node_modules/pagetojson/dist sync /^.*tojson$","components/Subject/Subject.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","text","now","next","subject","subject-name","subject-classroom","hour","map","./pagetojson","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","subjectRegex","Box","styled","div","_templateObject","p","Subject","getName","_i","length","re","_this","props","name","indexOf","react_default","a","createElement","this","className","styles","classroom","hour_wrapper","React","Component","weekDaysToPolish","Monday","Tuesday","Wednesday","Thursday","Friday","weekDays","classes","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPlan","xhr","XMLHttpRequest","onreadystatechange","readyState","status","plan","responseText","parsed","tabletojson","convert","setState","loading","open","concat","state","currentClass","send","day","prevProps","prevState","_this2","onChange","target","value","i","c","row","rowData","split","pop","Subject_Subject","key","Godz","slice","color","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b13fe2f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"style_text__21isj\",\"now\":\"style_now__VoKB2\",\"next\":\"style_next__1ZfAr\",\"subject\":\"style_subject__1Ivyy\",\"subject-name\":\"style_subject-name__1jmla\",\"subject-classroom\":\"style_subject-classroom__V1BFA\",\"hour\":\"style_hour__2XNoH\"};","var map = {\n\t\"./pagetojson\": 230\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 521;","import React from \"react\";\nimport styled from \"styled-components\";\nimport leftPad from \"left-pad\";\nimport colorString from \"color-string\";\n\nimport styles from \"./style.module.scss\";\n\nconst subjectRegex = [\n  [\"Pracowniasiecikomputerowych\", \"PSSI\"],\n  [\"Religia\", \"Religia/Tetyka\"],\n  [\"Tetyka_P\", \"Religia/Tetyka\"],\n  [\"Systemyoperacyjne\", \"SO\"]\n];\n\nfunction changeHue(rgb, degree) {\n  console.log(rgb);\n  const color = colorString.get.hex(rgb);\n  const hsl = colorString.to.hsl(color);\n  const hslParsed = colorString.get.hsl(hsl);\n  let hue = parseInt(hslParsed[0]);\n  console.log(color.string());\n  hue += degree;\n  if (hue > 360) {\n    hue -= 360;\n  } else if (hue < 0) {\n    hue += 360;\n  }\n  console.log(hue);\n  let finalColor = colorString.get.hsl(\n    `hsl(${hue.toString()}, ${hslParsed[1]}, ${hslParsed[2]})`\n  );\n  console.log(finalColor);\n  console.log(colorString.to.hex(finalColor || [30, 100, 60, 1]));\n  console.log(\"---\");\n  return colorString.to.hex(finalColor || [30, 100, 60, 1]);\n}\n\nfunction LightenDarkenColor(col, amt) {\n  let usePound = false;\n  if (col[0] == \"#\") {\n    col = col.slice(1);\n    usePound = true;\n  }\n  let num = parseInt(col, 16);\n  let rgb = [\n    (num >> 16) + amt,\n    ((num >> 8) & 0x00ff) + amt,\n    (num & 0x0000ff) + amt\n  ];\n\n  for (let i in rgb) {\n    if (rgb[i] > 255) rgb[i] = 255;\n    else if (rgb[i] < 0) rgb[i] = 0;\n  }\n  return (\n    (usePound ? \"#\" : \"\") +\n    leftPad((rgb[2] | (rgb[1] << 8) | (rgb[0] << 16)).toString(16), 6, \"0\")\n  );\n}\n// ${p => LightenDarkenColor(p.color, 40)} 10.35%,\n// ${p => LightenDarkenColor(p.color, -40)} 100%\n\nconst Box = styled.div`\n  background-image: linear-gradient(136.64deg, #514fcc 10.35%, #379bf2 100%);\n  box-shadow: 0px 8px 12px ${p => `#519bf299`};\n  color: #ffffff;\n  font-size: 36px;\n  text-align: left;\n  padding: 27px;\n  margin: 18px;\n  min-width: 250px;\n  max-width: 350px;\n  min-height: 95px;\n  box-sizing: border-box;\n  border-radius: 30px;\n  position: relative;\n`;\n\n/**\n * @name Subject\n * @description One subject block of lesson plan.\n * @example\n * <Subject name=\"Math\" classroom=\"16\" color=\"#B036C3\" now />\n * <Subject name=\"Math\" classroom=\"16\" color=\"#FF9933\" next />\n * <Subject name=\"Math\" classroom=\"16\" color=\"#0B883D\" />\n */\nexport default class Subject extends React.Component {\n  getName = () => {\n    // console.log(this.props.name);\n    for (const re of subjectRegex) {\n      // console.log(re);\n      if (this.props.name.indexOf(re[0]) !== -1) {\n        return re[1];\n      }\n      return this.props.name;\n    }\n  };\n\n  render() {\n    return (\n      <Box>\n        {this.props.now ? (\n          <h1 className={styles.now}>Now</h1>\n        ) : this.props.next ? (\n          <h2 className={styles.next}>Next</h2>\n        ) : null}\n        <p className={styles[\"subject-name\"]}>{this.getName() || \"Free!\"}</p>\n        <p className={styles[\"subject-classroom\"]}>{this.props.classroom}</p>\n        {this.props.hour !== \"7:10\" ? (\n          <div className={styles.hour_wrapper}>\n            <div className={styles.hour}>{this.props.hour}</div>\n          </div>\n        ) : null}\n      </Box>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport tabletojson from \"tabletojson\";\n\nimport \"./App.css\";\nimport Subject from \"./components/Subject/Subject\";\n\nconst weekDaysToPolish = {\n  Monday: \"Poniedziałek\",\n  Tuesday: \"Wtorek\",\n  Wednesday: \"Środa\",\n  Thursday: \"Czwartek\",\n  Friday: \"Piątek\"\n};\n\nconst weekDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\nconst classes = [\n  \"1A\",\n  \"1B\",\n  \"1C\",\n  \"1D\",\n  \"1E\",\n  \"2A\",\n  \"2B\",\n  \"2C\",\n  \"2D\",\n  \"2E\",\n  \"3A\",\n  \"3B\",\n  \"3C\",\n  \"3D\",\n  \"3E\",\n  \"3F\",\n  \"4A\",\n  \"4B\",\n  \"4C\",\n  \"4D\",\n  \"4E\",\n  \"4F\"\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plan: null,\n      day: 0,\n      currentClass: \"2E\",\n      loading: true\n    };\n    this.getPlan();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentClass !== this.state.currentClass) {\n      this.setState({ loading: true });\n      this.getPlan();\n    }\n  }\n\n  getPlan = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        const plan = xhr.responseText;\n        let parsed = tabletojson.convert(plan);\n\n        this.setState({ plan: parsed[2], loading: false });\n      }\n    };\n    // Using outside service becouse of CORS policy\n    xhr.open(\n      \"GET\",\n      `https://cors-escape.herokuapp.com/http://zsk.poznan.pl/plany/tk/plany/o${classes.indexOf(\n        this.state.currentClass\n      ) + 1}.html`\n    );\n    xhr.send();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <select onChange={e => this.setState({ day: e.target.value })}>\n          {weekDays.map((day, i) => (\n            <option value={i}>{weekDaysToPolish[day]}</option>\n          ))}\n        </select>\n        <select\n          onChange={e => {\n            this.setState({ currentClass: e.target.value });\n          }}\n          value={this.state.currentClass}\n        >\n          {classes.map(c => (\n            <option>{c}</option>\n          ))}\n        </select>\n        {this.state.loading ? (\n          <h1>I'M WORKING</h1>\n        ) : this.state.plan ? (\n          this.state.plan.map(row => {\n            // Filter row to display only data from current day.\n            const rowData = row[weekDaysToPolish[weekDays[this.state.day]]];\n            let subject = rowData.split(\" \");\n            const classroom = subject.pop();\n            return (\n              <Subject\n                key={row.Godz + rowData}\n                name={rowData.slice(0, rowData.length - classroom.length)}\n                classroom={classroom}\n                hour={row.Godz.split(\"-\")[0]}\n                color=\"#B036C3\"\n              />\n            );\n          })\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}